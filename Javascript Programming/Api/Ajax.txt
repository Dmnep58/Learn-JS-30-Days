AJAX =  Asynchronous JavaScript And XML.
--------------------------------------------------------------------------------------------


AJAX is a developer's dream, because you can:

1. Read data from a web server - after the page has loaded
2. Update a web page without reloading the page
3. Send data to a web server - in the background

---------------------------------------------------------------------------------------------
AJAX just uses a combination of:
    A browser built-in XMLHttpRequest object (to request data from a web server)
JavaScript and HTML DOM (to display or use the data)

---------------------------------------------------------------------------------------------

Modern browser uses the fetch Api.

---------------------------------------------------------------------------------------------

The keystone of AJAX is the XMLHttpRequest object.

1. Create an XMLHttpRequest object
      
        const var = new XMLHttpRequest();

2. Define a callback function
      
        xhttp.onload = function() {
                // What to do when the response is ready
                }

3. Open the XMLHttpRequest object

            xhttp.open("GET", "ajax_info.txt");

                        GET is the method and 
                            the second one will be the url of the server or the api.

4. Send a Request to a server

            xhttp.send();

-----------------------------------------------------------------------------------------------


The readyState property holds the status of the XMLHttpRequest.

The onreadystatechange property defines a callback function to be executed when the readyState changes.

The status property and the statusText properties hold the status of the XMLHttpRequest object.

onreadystatechange --->  Defines a function to be called when the readyState property changes

readyState --->  Holds the status of the XMLHttpRequest.
                        0: request not initialized
                        1: server connection established
                        2: request received
                        3: processing request
                        4: request finished and response is ready

status -->
        200: "OK"
        403: "Forbidden"
        404: "Page not found"
        For a complete list go to the Http Messages Reference


statusText   --->	Returns the status-text (e.g. "OK" or "Not Found")



example :

function loadDoc() {
  const xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      document.getElementById("demo").innerHTML =
      this.responseText;
    }
  };
  xhttp.open("GET", "ajax_info.txt");
  xhttp.send();
}